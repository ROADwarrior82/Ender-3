[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro POWEROFF]
gcode:
  RESPOND TYPE=command MSG=action:poweroff
  
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[pause_resume]

[gcode_macro PRINT_START]
gcode:        
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    G1 Z2.0 F3000 ;Move Z Axis up
    G90 ; use absolute coordinates
    M83 ; extruder relative mode
    M140 S[first_layer_bed_temperature] ; set final bed temp
    M104 S150 ; set temporary nozzle temp to prevent oozing during homing and auto bed leveling
    G4 S10 ; allow partial nozzle warmup
        
    G28
    BED_MESH_CALIBRATE
    G1 Z50 F240
    G1 X2 Y10 F3000
    M104 S{first_layer_temperature[initial_extruder]+extruder_temperature_offset[initial_extruder]} ; set final nozzle temp
    M190 S[first_layer_bed_temperature] ; wait for bed temp to stabilize
    M109 S{first_layer_temperature[initial_extruder]+extruder_temperature_offset[initial_extruder]} ; wait for nozzle temp to stabilize
    G1 Z0.28 F240
    G92 E0
    G1 Y140 E10 F1500 ; prime the nozzle
    G1 X2.3 F5000
    G92 E0
    G1 Y10 E10 F1200 ; prime the nozzle
    G92 E0
    M190 S{bedtemp}                                                              ; set & wait for bed temp
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chambertemp}   ; wait for chamber temp
    # <insert your routines here>

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  {% set x_mid = printer.toolhead.axis_maximum.x|float / 2.0  %}
  {% set y_max = printer.toolhead.axis_maximum.y|float %}
  SET_SKEW CLEAR=1
  STATUS_BUSY
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 40.0) %}
      {% set z_safe = act_z + 40.0 %}
  {% else %}
      {% set z_safe = max_z %}
  {% endif %}
  G90
  G1 X{x_mid} Y{y_max} Z{z_safe}
  G92 E0                         ; zero the extruder
  G1 E-4.0 F3600                 ; retract filament
  M84 ; disable steppers
  TURN_OFF_HEATERS
  M106 S0
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
  STATUS_READY
  BASE_CANCEL_PRINT

[delayed_gcode _CLEAR_DISPLAY]
gcode:
  M117

[gcode_macro DUMP_WARNINGS]
description: Debug: Print all warning messages from klipper
gcode:
  {% if 'warnings' not in printer.configfile %}
      {action_respond_info("klipper to old! Please update klipper first and run again")}
  {% else %}
    {% set parameters = ["printer.configfile.warnings:"] %}
    {% for warning in printer.configfile.warnings %}
      {% set parameters = parameters.append("%s -> %s -> %s\n%s" % (warning.type, warning.section, warning.option, warning.message)) %}
    {% endfor %}
    {action_respond_info(parameters|join("\n"))}
  {% endif %}

[gcode_macro HOME_IF_NEEDED]
gcode:
    {% set verbose = params.VERBOSE|default(False) %}

    {% if not (('xy' in printer.toolhead.homed_axes) or ('z' in printer.toolhead.homed_axes)) %}
        {% if verbose %}
            { action_respond_info("Homing!") }
        {% endif %}
        G28
    {% endif %}

[gcode_macro LOAD_FILAMENT]
gcode:
   M117 Loading filament...
   {% if printer[printer.toolhead.extruder].temperature < 200.0 %}
   STATUS_HEATING
   M117 Heating hotend...
   M109 S200
   {%endif%}
   STATUS_BUSY
   M117 Loading filament...
   M83                            ; set extruder to relative
   G1 E40 F300                    ; slower extrusion for hotend path
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
   UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
   STATUS_READY

# Override M117 to also show in console
[gcode_macro M117]
rename_existing: M117.1
gcode:
  M117.1 {rawparams}
  {action_respond_info(rawparams)}

[gcode_macro M600]
gcode:
    PAUSE
    M117 Paused
    M118 Print paused for filament change... type "Resume" to continue

## Use:
##   - DUMP_WARNINGS

[gcode_macro MAINTENANCE]
description: move the toolhead to a convenient position for working on it
gcode:

  {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
  {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

  {% set mid_x = max_x / 2.0 %}
  {% set z80 = max_z * 0.8 %}

  STATUS_BUSY
  HOME_IF_NEEDED
  G0 X{mid_x} Y0 Z{z80} F10000
  STATUS_READY

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    STATUS_BUSY
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 40) %}
        {% set z_safe = 40.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600    ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X{max_x / 2} Y{max_y} F3600          ; park nozzle at rear
    M84                            ; disable steppers
    M117 Print Complete.

    {% if printer.configfile.config["bed_mesh"] %}
	BED_MESH_CLEAR
    {% endif %}

    {% if printer['fan_generic exhaust_fan'] %}
	SET_FAN_SPEED FAN=exhaust_fan SPEED=1.0
	UPDATE_DELAYED_GCODE ID=_DISABLE_EXHAUST DURATION=300
    {% else %}
        M118 No exhaust fan configured
    {% endif %}

    {% if printer['fan_generic cooling_fan'] %}
	SET_FAN_SPEED FAN=cooling_fan SPEED=1.0
	UPDATE_DELAYED_GCODE ID=_DISABLE_COOLING DURATION=300
    {% else %}
        M118 No cooling fan configured
    {% endif %}

    STATUS_READY
    UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=60

[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% if printer[printer.toolhead.extruder].temperature < 200.0 %}
    STATUS_HEATING
    M117 Heating hotend...
    M109 S200
  {% endif %}
  STATUS_BUSY
  M117 Unloading filament...
  M83                            ; set extruder to relative
  G1 E10 F300                    ; extrude a little to soften tip
  G1 E-40 F1800                 ; retract filament completely
  M82                            ; set extruder to absolute
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10
  STATUS_READY
